---
  - name: Get instances info
    hosts: localhost
    connection: local
    gather_facts: no
    vars:
       ec2_security_group_name: "{{vpc_name}}_SECGRP"
       ec2_ansible_group: "{{user_name}}"
       my_email_address: "{{user_name}}@redhat.com"


    tasks:
    - name: 'Preflight Varible check :: subnet_name'
      fail: msg='Please include the subnet_name to the variable "subnet_name"'
      run_once: true
      when: 'subnet_name is not defined'
    #- name: 'Preflight Varible check :: key_name'
    #  fail: msg='Please include the key_name to the variable "key_name"'
    #  run_once: true
    #  when: 'key_name is not defined'
    - name: 'Preflight Varible check :: image'
      fail: msg='Please include the image to the variable "image"'
      run_once: true
      when: 'image is not defined'
    - name: 'Preflight Varible check :: count'
      fail: msg='Please include the count to the variable "count"'
      run_once: true
      when: 'count is not defined'
    - name: 'Preflight Varible check :: region'
      fail: msg='Please include the region to the variable "region"'
      run_once: true
      when: 'region is not defined'
    - name: 'Preflight Varible check :: assign_public_ip'
      fail: msg='Please include the assign_public_ip to the variable "assign_public_ip"'
      run_once: true
      when: 'assign_public_ip is not defined'
    - name: 'Preflight Varible check :: alwaysup'
      fail: msg='Please include the alwaysup to the variable "alwaysup"'
      run_once: true
      when: 'alwaysup is not defined'
  
    - name: If vpc_subnet_id doesn't exist lookup by {{subnet_name}}
      block:
      - name: Looking Up Subnet_id for {{subnet_name}} if vpc_subnet_id doesn't exist
        ec2_vpc_subnet_info:
          region: "{{region}}"
          filters:
            "tag:Name": "{{subnet_name}}"
        register: subnet_id

      - name: Setting vpc_subnet_id based on Lookup of {{subnet_name}}
        set_fact:
          vpc_subnet_id: "{{subnet_id.subnets[0].id}}"
      when: vpc_subnet_id is undefined

    - name: Show Subnet_id
      debug:
        msg: "{{vpc_subnet_id}}"

    - name: Creating {{count}} AWS VMs in {{region}}
      amazon.aws.ec2_instance:
        name: "Web Server"
        region: "{{region}}"
        #key_name: "prod-ssh-key"
        #vpc_subnet_id: subnet-5ca1ab1e
        instance_type: "{{instance_type}}"
        security_group: "{{ec2_security_group_name}}"
        network:
          assign_public_ip: "{{assign_public_ip}}"
        image_id: "{{image}}"
        tags:
          Environment: Web Demo
          AlwaysUp: "{{alwaysup}}"
          Createdby: Ansible Tower
          Contact: "{{my_email_address}}"
          DeletebBy: "{{ec2_ansible_group}}"